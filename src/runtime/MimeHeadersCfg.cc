
/* Web Polygraph       http://www.web-polygraph.org/
 * (C) 2003-2014 The Measurement Factory
 * Licensed under the Apache License, Version 2.0 */

#include "base/polygraph.h"

#include "xstd/Rnd.h"
#include "base/RndPermut.h"
#include "pgl/MimeHeaderSym.h"
#include "pgl/PglArraySym.h"
#include "runtime/httpText.h"
#include "runtime/LogComment.h"

#include "runtime/MimeHeadersCfg.h"


bool MimeHeadersCfg::SawClash = false;


MimeHeadersCfg::MimeHeadersCfg(const ArraySym &sym):
	theSym((ArraySym*)sym.clone()) {
	Assert(theSym);
	theSym->forEach(*this);
}

void MimeHeadersCfg::selectHeaders(Visitor &v) const {
	static RndGen rng(LclPermut(rndHttpHeaders));
	theSym->forEach(v, &rng);
}

void MimeHeadersCfg::visit(const SynSym &item) {
	const MimeHeaderSym &sym = (MimeHeaderSym&)item.cast(MimeHeaderSym::TheType);
	const String *const name = sym.name();
	if (!name || !*name)
		Comment << sym.loc() << "error: MIME header name is not set" << endc << xexit;

	if (KnownHeader(*name)) {
		Comment << sym.loc() << "warning: configured MIME header may also " <<
			"be generated by Polygraph itself: " << name << endc;
		SawClash = true; // may already be true
	}
}
